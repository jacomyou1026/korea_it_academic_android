난수와 이벤트를 이용한 제비뽑기 게임

LotActivity액티비티 생성. 레이아웃은 아래와 같이 정의

<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".LotActivity" 
    android:orientation="vertical"
    android:gravity="center">

    <TextView
        android:id="@+id/txt_result"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Result" 
        android:textSize="20dp"
        android:layout_gravity="center"/>
    
    <LinearLayout 
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal"
        android:gravity="center"
        android:layout_marginTop="20dp">
        
        <Button 
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:id="@+id/btn1"
            android:text="1"
            android:textSize="20dp"/>
        
        <Button 
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:id="@+id/btn2"
            android:text="2"
            android:textSize="20dp"/>
        
        <Button 
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:id="@+id/btn3"
            android:text="3"
            android:textSize="20dp"/>
        
        <Button 
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:id="@+id/btn4"
            android:text="4"
            android:textSize="20dp"/>
    </LinearLayout>
    
    <Button 
        android:id="@+id/btn_re"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="restart"/>

</LinearLayout>

---------------------------------------------------------------------

LotActivity에 이벤트 추가하기
public class LotActivity extends Activity {

	Button btn1, btn2, btn3, btn4, btn_re; //버튼1,2,3,4와 다시하기 버튼
	TextView txt_result; //결과출력 텍스트뷰
	int n; //난수발생용 변수n
	
	boolean win; //꽝인지 당첨인지를 판별하는 변수

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_lot);
		
		btn1 = (Button)findViewById(R.id.btn1);
		btn2 = (Button)findViewById(R.id.btn2);
		btn3 = (Button)findViewById(R.id.btn3);
		btn4 = (Button)findViewById(R.id.btn4);
		btn_re = (Button)findViewById(R.id.btn_re);
		txt_result = (TextView)findViewById(R.id.txt_result);
		
		btn1.setOnClickListener(myClick);
		btn2.setOnClickListener(myClick);
		btn3.setOnClickListener(myClick);
		btn4.setOnClickListener(myClick);

		btn_re.setOnClickListener( new OnClickListener() {
			public void onClick(View v) { 
				n = new Random().nextInt(4) + 1;
				txt_result.setText("Result");
			}
		} );
		
		n = new Random().nextInt(4) + 1;		
	}//onCreate()의 끝

	//온클릭리스너 추가.
	OnClickListener myClick = new OnClickListener() {

		@Override
		//이벤트를 감지하여 해당 뷰를v에 할당.
		//아래쪽에 check()메서드 먼저 정의
		public void onClick(View v) { 
			
			//클릭이 감지된 v를 Button형태로 형변환하여 안에 있는 텍스트를 정수형태로 추출한다
			int myNum = Integer.parseInt( ((Button)v).getText().toString() );

			if( n == myNum ){
				txt_result.setText("당첨!!");
		                  }else{
				txt_result.setText("꽝");
			}
			
		}
	};

}



